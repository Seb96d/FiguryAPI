plugins {
	id 'org.springframework.boot' version '2.7.4'
	id 'io.spring.dependency-management' version '1.0.14.RELEASE'
	id 'org.openapi.generator' version "6.2.0"
	id 'java'
}

group = 'shapes'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '15'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'io.swagger.parser.v3:swagger-parser:2.0.20'
	implementation 'org.openapitools:jackson-databind-nullable:0.2.1'
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.4'

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

// generates the spring controller interfaces from openapi spec in src/main/resources/service.yaml
openApiGenerate {
	generatorName = "spring"
	inputSpec = "$projectDir/src/main/resources/service.yaml"
	outputDir = "$buildDir/generated"
	apiPackage = "org.guardiandev.helloservice.api"
	invokerPackage = "org.guardiandev.helloservice"
	modelPackage = "org.guardiandev.helloservice.models"
	configOptions = [
			dateLibrary: "java8",
			interfaceOnly: "true",
	]
}

// forces generation of spring controllers on compile, adding them to the sources for compilation
compileJava.dependsOn tasks.openApiGenerate
sourceSets.main.java.srcDir "$buildDir/generated/src/main/java"
sourceSets.main.resources.srcDir "$buildDir/generated/src/main/resources"